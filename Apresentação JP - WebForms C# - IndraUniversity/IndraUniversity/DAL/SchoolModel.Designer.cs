//------------------------------------------------------------------------------
// <auto-generated>
//    O código foi gerado a partir de um modelo.
//
//    Alterações manuais neste arquivo podem provocar comportamento inesperado no aplicativo.
//    Alterações manuais neste arquivo serão substituídas se o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadados de Relação EDM

[assembly: EdmRelationshipAttribute("SchoolModel", "FK_Course_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ContosoUniversity.DAL.Department), "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ContosoUniversity.DAL.Course), true)]
[assembly: EdmRelationshipAttribute("SchoolModel", "FK_OnlineCourse_Course", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ContosoUniversity.DAL.Course), "OnlineCourse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ContosoUniversity.DAL.OnlineCourse), true)]
[assembly: EdmRelationshipAttribute("SchoolModel", "FK_OnsiteCourse_Course", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ContosoUniversity.DAL.Course), "OnsiteCourse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ContosoUniversity.DAL.OnsiteCourse), true)]
[assembly: EdmRelationshipAttribute("SchoolModel", "FK_StudentGrade_Course", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ContosoUniversity.DAL.Course), "StudentGrade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ContosoUniversity.DAL.StudentGrade), true)]
[assembly: EdmRelationshipAttribute("SchoolModel", "FK_OfficeAssignment_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ContosoUniversity.DAL.Person), "OfficeAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ContosoUniversity.DAL.OfficeAssignment), true)]
[assembly: EdmRelationshipAttribute("SchoolModel", "FK_StudentGrade_Student", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ContosoUniversity.DAL.Person), "StudentGrade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ContosoUniversity.DAL.StudentGrade), true)]
[assembly: EdmRelationshipAttribute("SchoolModel", "CourseInstructor", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ContosoUniversity.DAL.Course), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ContosoUniversity.DAL.Person))]
[assembly: EdmRelationshipAttribute("SchoolModel", "FK_Department_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ContosoUniversity.DAL.Person), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ContosoUniversity.DAL.Department), true)]

#endregion

namespace ContosoUniversity.DAL
{
    #region Contextos
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    public partial class SchoolEntities : ObjectContext
    {
        #region Construtores
    
        /// <summary>
        /// Inicializa um novo objeto SchoolEntities usando a cadeia de conexão localizada na seção 'SchoolEntities' do arquivo de configuração do aplicativo.
        /// </summary>
        public SchoolEntities() : base("name=SchoolEntities", "SchoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicialize um novo objeto SchoolEntities.
        /// </summary>
        public SchoolEntities(string connectionString) : base(connectionString, "SchoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicialize um novo objeto SchoolEntities.
        /// </summary>
        public SchoolEntities(EntityConnection connection) : base(connection, "SchoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos Parciais
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriedades de ObjectSet
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Course> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Course>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Course> _Courses;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<OfficeAssignment> OfficeAssignments
        {
            get
            {
                if ((_OfficeAssignments == null))
                {
                    _OfficeAssignments = base.CreateObjectSet<OfficeAssignment>("OfficeAssignments");
                }
                return _OfficeAssignments;
            }
        }
        private ObjectSet<OfficeAssignment> _OfficeAssignments;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<OnlineCourse> OnlineCourses
        {
            get
            {
                if ((_OnlineCourses == null))
                {
                    _OnlineCourses = base.CreateObjectSet<OnlineCourse>("OnlineCourses");
                }
                return _OnlineCourses;
            }
        }
        private ObjectSet<OnlineCourse> _OnlineCourses;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<OnsiteCourse> OnsiteCourses
        {
            get
            {
                if ((_OnsiteCourses == null))
                {
                    _OnsiteCourses = base.CreateObjectSet<OnsiteCourse>("OnsiteCourses");
                }
                return _OnsiteCourses;
            }
        }
        private ObjectSet<OnsiteCourse> _OnsiteCourses;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<StudentGrade> StudentGrades
        {
            get
            {
                if ((_StudentGrades == null))
                {
                    _StudentGrades = base.CreateObjectSet<StudentGrade>("StudentGrades");
                }
                return _StudentGrades;
            }
        }
        private ObjectSet<StudentGrade> _StudentGrades;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<InstructorName> InstructorNames
        {
            get
            {
                if ((_InstructorNames == null))
                {
                    _InstructorNames = base.CreateObjectSet<InstructorName>("InstructorNames");
                }
                return _InstructorNames;
            }
        }
        private ObjectSet<InstructorName> _InstructorNames;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Courses. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToCourses(Course course)
        {
            base.AddObject("Courses", course);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Departments. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet OfficeAssignments. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToOfficeAssignments(OfficeAssignment officeAssignment)
        {
            base.AddObject("OfficeAssignments", officeAssignment);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet OnlineCourses. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToOnlineCourses(OnlineCourse onlineCourse)
        {
            base.AddObject("OnlineCourses", onlineCourse);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet OnsiteCourses. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToOnsiteCourses(OnsiteCourse onsiteCourse)
        {
            base.AddObject("OnsiteCourses", onsiteCourse);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet People. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet StudentGrades. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToStudentGrades(StudentGrade studentGrade)
        {
            base.AddObject("StudentGrades", studentGrade);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet InstructorNames. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToInstructorNames(InstructorName instructorName)
        {
            base.AddObject("InstructorNames", instructorName);
        }

        #endregion

        #region Importações da Função
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectResult<Course> GetCourses()
        {
            return base.ExecuteFunction<Course>("GetCourses");
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Course> GetCourses(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Course>("GetCourses", mergeOption);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Course.
        /// </summary>
        /// <param name="courseID">Valor inicial da propriedade CourseID.</param>
        /// <param name="title">Valor inicial da propriedade Title.</param>
        /// <param name="credits">Valor inicial da propriedade Credits.</param>
        /// <param name="departmentID">Valor inicial da propriedade DepartmentID.</param>
        public static Course CreateCourse(global::System.Int32 courseID, global::System.String title, global::System.Int32 credits, global::System.Int32 departmentID)
        {
            Course course = new Course();
            course.CourseID = courseID;
            course.Title = title;
            course.Credits = credits;
            course.DepartmentID = departmentID;
            return course;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                if (_CourseID != value)
                {
                    OnCourseIDChanging(value);
                    ReportPropertyChanging("CourseID");
                    _CourseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseID");
                    OnCourseIDChanged();
                }
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Credits
        {
            get
            {
                return _Credits;
            }
            set
            {
                OnCreditsChanging(value);
                ReportPropertyChanging("Credits");
                _Credits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Credits");
                OnCreditsChanged();
            }
        }
        private global::System.Int32 _Credits;
        partial void OnCreditsChanging(global::System.Int32 value);
        partial void OnCreditsChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_Course_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SchoolModel.FK_Course_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SchoolModel.FK_Course_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("SchoolModel.FK_Course_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("SchoolModel.FK_Course_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_OnlineCourse_Course", "OnlineCourse")]
        public OnlineCourse OnlineCourse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineCourse>("SchoolModel.FK_OnlineCourse_Course", "OnlineCourse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineCourse>("SchoolModel.FK_OnlineCourse_Course", "OnlineCourse").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OnlineCourse> OnlineCourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineCourse>("SchoolModel.FK_OnlineCourse_Course", "OnlineCourse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OnlineCourse>("SchoolModel.FK_OnlineCourse_Course", "OnlineCourse", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_OnsiteCourse_Course", "OnsiteCourse")]
        public OnsiteCourse OnsiteCourse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnsiteCourse>("SchoolModel.FK_OnsiteCourse_Course", "OnsiteCourse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnsiteCourse>("SchoolModel.FK_OnsiteCourse_Course", "OnsiteCourse").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OnsiteCourse> OnsiteCourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnsiteCourse>("SchoolModel.FK_OnsiteCourse_Course", "OnsiteCourse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OnsiteCourse>("SchoolModel.FK_OnsiteCourse_Course", "OnsiteCourse", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_StudentGrade_Course", "StudentGrade")]
        public EntityCollection<StudentGrade> StudentGrades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentGrade>("SchoolModel.FK_StudentGrade_Course", "StudentGrade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentGrade>("SchoolModel.FK_StudentGrade_Course", "StudentGrade", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "CourseInstructor", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SchoolModel.CourseInstructor", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SchoolModel.CourseInstructor", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Department.
        /// </summary>
        /// <param name="departmentID">Valor inicial da propriedade DepartmentID.</param>
        /// <param name="name">Valor inicial da propriedade Name.</param>
        /// <param name="budget">Valor inicial da propriedade Budget.</param>
        /// <param name="startDate">Valor inicial da propriedade StartDate.</param>
        public static Department CreateDepartment(global::System.Int32 departmentID, global::System.String name, global::System.Decimal budget, global::System.DateTime startDate)
        {
            Department department = new Department();
            department.DepartmentID = departmentID;
            department.Name = name;
            department.Budget = budget;
            department.StartDate = startDate;
            return department;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                if (_DepartmentID != value)
                {
                    OnDepartmentIDChanging(value);
                    ReportPropertyChanging("DepartmentID");
                    _DepartmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentID");
                    OnDepartmentIDChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Budget
        {
            get
            {
                return _Budget;
            }
            set
            {
                OnBudgetChanging(value);
                ReportPropertyChanging("Budget");
                _Budget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Budget");
                OnBudgetChanged();
            }
        }
        private global::System.Decimal _Budget;
        partial void OnBudgetChanging(global::System.Decimal value);
        partial void OnBudgetChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Administrator
        {
            get
            {
                return _Administrator;
            }
            set
            {
                OnAdministratorChanging(value);
                ReportPropertyChanging("Administrator");
                _Administrator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Administrator");
                OnAdministratorChanged();
            }
        }
        private Nullable<global::System.Int32> _Administrator;
        partial void OnAdministratorChanging(Nullable<global::System.Int32> value);
        partial void OnAdministratorChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_Course_Department", "Course")]
        public EntityCollection<Course> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Course>("SchoolModel.FK_Course_Department", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Course>("SchoolModel.FK_Course_Department", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_Department_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_Department_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_Department_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_Department_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SchoolModel.FK_Department_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="Instructor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Instructor : Person
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Instructor.
        /// </summary>
        /// <param name="personID">Valor inicial da propriedade PersonID.</param>
        /// <param name="lastName">Valor inicial da propriedade LastName.</param>
        /// <param name="firstMidName">Valor inicial da propriedade FirstMidName.</param>
        /// <param name="hireDate">Valor inicial da propriedade HireDate.</param>
        public static Instructor CreateInstructor(global::System.Int32 personID, global::System.String lastName, global::System.String firstMidName, global::System.DateTime hireDate)
        {
            Instructor instructor = new Instructor();
            instructor.PersonID = personID;
            instructor.LastName = lastName;
            instructor.FirstMidName = firstMidName;
            instructor.HireDate = hireDate;
            return instructor;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private global::System.DateTime _HireDate;
        partial void OnHireDateChanging(global::System.DateTime value);
        partial void OnHireDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="InstructorName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstructorName : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto InstructorName.
        /// </summary>
        /// <param name="fullName">Valor inicial da propriedade FullName.</param>
        /// <param name="personID">Valor inicial da propriedade PersonID.</param>
        public static InstructorName CreateInstructorName(global::System.String fullName, global::System.Int32 personID)
        {
            InstructorName instructorName = new InstructorName();
            instructorName.FullName = fullName;
            instructorName.PersonID = personID;
            return instructorName;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                if (_FullName != value)
                {
                    OnFullNameChanging(value);
                    ReportPropertyChanging("FullName");
                    _FullName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FullName");
                    OnFullNameChanged();
                }
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="OfficeAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OfficeAssignment : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto OfficeAssignment.
        /// </summary>
        /// <param name="instructorID">Valor inicial da propriedade InstructorID.</param>
        /// <param name="location">Valor inicial da propriedade Location.</param>
        /// <param name="timestamp">Valor inicial da propriedade Timestamp.</param>
        public static OfficeAssignment CreateOfficeAssignment(global::System.Int32 instructorID, global::System.String location, global::System.Byte[] timestamp)
        {
            OfficeAssignment officeAssignment = new OfficeAssignment();
            officeAssignment.InstructorID = instructorID;
            officeAssignment.Location = location;
            officeAssignment.Timestamp = timestamp;
            return officeAssignment;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstructorID
        {
            get
            {
                return _InstructorID;
            }
            set
            {
                if (_InstructorID != value)
                {
                    OnInstructorIDChanging(value);
                    ReportPropertyChanging("InstructorID");
                    _InstructorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstructorID");
                    OnInstructorIDChanged();
                }
            }
        }
        private global::System.Int32 _InstructorID;
        partial void OnInstructorIDChanging(global::System.Int32 value);
        partial void OnInstructorIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_OfficeAssignment_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_OfficeAssignment_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_OfficeAssignment_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_OfficeAssignment_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SchoolModel.FK_OfficeAssignment_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="OnlineCourse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnlineCourse : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto OnlineCourse.
        /// </summary>
        /// <param name="courseID">Valor inicial da propriedade CourseID.</param>
        /// <param name="uRL">Valor inicial da propriedade URL.</param>
        public static OnlineCourse CreateOnlineCourse(global::System.Int32 courseID, global::System.String uRL)
        {
            OnlineCourse onlineCourse = new OnlineCourse();
            onlineCourse.CourseID = courseID;
            onlineCourse.URL = uRL;
            return onlineCourse;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                if (_CourseID != value)
                {
                    OnCourseIDChanging(value);
                    ReportPropertyChanging("CourseID");
                    _CourseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseID");
                    OnCourseIDChanged();
                }
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_OnlineCourse_Course", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_OnlineCourse_Course", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_OnlineCourse_Course", "Course").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_OnlineCourse_Course", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("SchoolModel.FK_OnlineCourse_Course", "Course", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="OnsiteCourse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnsiteCourse : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto OnsiteCourse.
        /// </summary>
        /// <param name="courseID">Valor inicial da propriedade CourseID.</param>
        /// <param name="location">Valor inicial da propriedade Location.</param>
        /// <param name="days">Valor inicial da propriedade Days.</param>
        /// <param name="time">Valor inicial da propriedade Time.</param>
        public static OnsiteCourse CreateOnsiteCourse(global::System.Int32 courseID, global::System.String location, global::System.String days, global::System.DateTime time)
        {
            OnsiteCourse onsiteCourse = new OnsiteCourse();
            onsiteCourse.CourseID = courseID;
            onsiteCourse.Location = location;
            onsiteCourse.Days = days;
            onsiteCourse.Time = time;
            return onsiteCourse;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                if (_CourseID != value)
                {
                    OnCourseIDChanging(value);
                    ReportPropertyChanging("CourseID");
                    _CourseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseID");
                    OnCourseIDChanged();
                }
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Days
        {
            get
            {
                return _Days;
            }
            set
            {
                OnDaysChanging(value);
                ReportPropertyChanging("Days");
                _Days = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Days");
                OnDaysChanged();
            }
        }
        private global::System.String _Days;
        partial void OnDaysChanging(global::System.String value);
        partial void OnDaysChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_OnsiteCourse_Course", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_OnsiteCourse_Course", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_OnsiteCourse_Course", "Course").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_OnsiteCourse_Course", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("SchoolModel.FK_OnsiteCourse_Course", "Course", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Instructor))]
    [KnownTypeAttribute(typeof(Student))]
    public abstract partial class Person : EntityObject
    {
        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstMidName
        {
            get
            {
                return _FirstMidName;
            }
            set
            {
                OnFirstMidNameChanging(value);
                ReportPropertyChanging("FirstMidName");
                _FirstMidName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstMidName");
                OnFirstMidNameChanged();
            }
        }
        private global::System.String _FirstMidName;
        partial void OnFirstMidNameChanging(global::System.String value);
        partial void OnFirstMidNameChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_OfficeAssignment_Person", "OfficeAssignment")]
        public OfficeAssignment OfficeAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficeAssignment>("SchoolModel.FK_OfficeAssignment_Person", "OfficeAssignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficeAssignment>("SchoolModel.FK_OfficeAssignment_Person", "OfficeAssignment").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OfficeAssignment> OfficeAssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficeAssignment>("SchoolModel.FK_OfficeAssignment_Person", "OfficeAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OfficeAssignment>("SchoolModel.FK_OfficeAssignment_Person", "OfficeAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_StudentGrade_Student", "StudentGrade")]
        public EntityCollection<StudentGrade> StudentGrades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentGrade>("SchoolModel.FK_StudentGrade_Student", "StudentGrade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentGrade>("SchoolModel.FK_StudentGrade_Student", "StudentGrade", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "CourseInstructor", "Course")]
        public EntityCollection<Course> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Course>("SchoolModel.CourseInstructor", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Course>("SchoolModel.CourseInstructor", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_Department_Person", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("SchoolModel.FK_Department_Person", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("SchoolModel.FK_Department_Person", "Department", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : Person
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Student.
        /// </summary>
        /// <param name="personID">Valor inicial da propriedade PersonID.</param>
        /// <param name="lastName">Valor inicial da propriedade LastName.</param>
        /// <param name="firstMidName">Valor inicial da propriedade FirstMidName.</param>
        /// <param name="enrollmentDate">Valor inicial da propriedade EnrollmentDate.</param>
        public static Student CreateStudent(global::System.Int32 personID, global::System.String lastName, global::System.String firstMidName, global::System.DateTime enrollmentDate)
        {
            Student student = new Student();
            student.PersonID = personID;
            student.LastName = lastName;
            student.FirstMidName = firstMidName;
            student.EnrollmentDate = enrollmentDate;
            return student;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EnrollmentDate
        {
            get
            {
                return _EnrollmentDate;
            }
            set
            {
                OnEnrollmentDateChanging(value);
                ReportPropertyChanging("EnrollmentDate");
                _EnrollmentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrollmentDate");
                OnEnrollmentDateChanged();
            }
        }
        private global::System.DateTime _EnrollmentDate;
        partial void OnEnrollmentDateChanging(global::System.DateTime value);
        partial void OnEnrollmentDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="StudentGrade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudentGrade : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto StudentGrade.
        /// </summary>
        /// <param name="enrollmentID">Valor inicial da propriedade EnrollmentID.</param>
        /// <param name="courseID">Valor inicial da propriedade CourseID.</param>
        /// <param name="studentID">Valor inicial da propriedade StudentID.</param>
        public static StudentGrade CreateStudentGrade(global::System.Int32 enrollmentID, global::System.Int32 courseID, global::System.Int32 studentID)
        {
            StudentGrade studentGrade = new StudentGrade();
            studentGrade.EnrollmentID = enrollmentID;
            studentGrade.CourseID = courseID;
            studentGrade.StudentID = studentID;
            return studentGrade;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnrollmentID
        {
            get
            {
                return _EnrollmentID;
            }
            set
            {
                if (_EnrollmentID != value)
                {
                    OnEnrollmentIDChanging(value);
                    ReportPropertyChanging("EnrollmentID");
                    _EnrollmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EnrollmentID");
                    OnEnrollmentIDChanged();
                }
            }
        }
        private global::System.Int32 _EnrollmentID;
        partial void OnEnrollmentIDChanging(global::System.Int32 value);
        partial void OnEnrollmentIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                OnCourseIDChanging(value);
                ReportPropertyChanging("CourseID");
                _CourseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseID");
                OnCourseIDChanged();
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                OnStudentIDChanging(value);
                ReportPropertyChanging("StudentID");
                _StudentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentID");
                OnStudentIDChanged();
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Grade
        {
            get
            {
                return _Grade;
            }
            set
            {
                OnGradeChanging(value);
                ReportPropertyChanging("Grade");
                _Grade = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grade");
                OnGradeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Grade;
        partial void OnGradeChanging(Nullable<global::System.Decimal> value);
        partial void OnGradeChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_StudentGrade_Course", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_StudentGrade_Course", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_StudentGrade_Course", "Course").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.FK_StudentGrade_Course", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("SchoolModel.FK_StudentGrade_Course", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "FK_StudentGrade_Student", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_StudentGrade_Student", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_StudentGrade_Student", "Person").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SchoolModel.FK_StudentGrade_Student", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SchoolModel.FK_StudentGrade_Student", "Person", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
