//------------------------------------------------------------------------------
// <auto-generated>
//    O código foi gerado a partir de um modelo.
//
//    Alterações manuais neste arquivo podem provocar comportamento inesperado no aplicativo.
//    Alterações manuais neste arquivo serão substituídas se o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadados de Relação EDM

[assembly: EdmRelationshipAttribute("AlumniAssociationModel", "AlumnusDonation", "Alumnus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ContosoUniversity.DAL.Alumnus), "Donation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ContosoUniversity.DAL.Donation), true)]

#endregion

namespace ContosoUniversity.DAL
{
    #region Contextos
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    public partial class AlumniAssociationModelContainer : ObjectContext
    {
        #region Construtores
    
        /// <summary>
        /// Inicializa um novo objeto AlumniAssociationModelContainer usando a cadeia de conexão localizada na seção 'AlumniAssociationModelContainer' do arquivo de configuração do aplicativo.
        /// </summary>
        public AlumniAssociationModelContainer() : base("name=AlumniAssociationModelContainer", "AlumniAssociationModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicialize um novo objeto AlumniAssociationModelContainer.
        /// </summary>
        public AlumniAssociationModelContainer(string connectionString) : base(connectionString, "AlumniAssociationModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicialize um novo objeto AlumniAssociationModelContainer.
        /// </summary>
        public AlumniAssociationModelContainer(EntityConnection connection) : base(connection, "AlumniAssociationModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos Parciais
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriedades de ObjectSet
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Alumnus> Alumni
        {
            get
            {
                if ((_Alumni == null))
                {
                    _Alumni = base.CreateObjectSet<Alumnus>("Alumni");
                }
                return _Alumni;
            }
        }
        private ObjectSet<Alumnus> _Alumni;
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        public ObjectSet<Donation> Donations
        {
            get
            {
                if ((_Donations == null))
                {
                    _Donations = base.CreateObjectSet<Donation>("Donations");
                }
                return _Donations;
            }
        }
        private ObjectSet<Donation> _Donations;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Alumni. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToAlumni(Alumnus alumnus)
        {
            base.AddObject("Alumni", alumnus);
        }
    
        /// <summary>
        /// Método preterido para adicionar um novo objeto ao EntitySet Donations. Em vez disso, experimente usar o método .Add da propriedade ObjectSet&lt;T&gt; associada.
        /// </summary>
        public void AddToDonations(Donation donation)
        {
            base.AddObject("Donations", donation);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlumniAssociationModel", Name="Alumnus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alumnus : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Alumnus.
        /// </summary>
        /// <param name="alumnusId">Valor inicial da propriedade AlumnusId.</param>
        /// <param name="name">Valor inicial da propriedade Name.</param>
        public static Alumnus CreateAlumnus(global::System.Int32 alumnusId, global::System.String name)
        {
            Alumnus alumnus = new Alumnus();
            alumnus.AlumnusId = alumnusId;
            alumnus.Name = name;
            return alumnus;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlumnusId
        {
            get
            {
                return _AlumnusId;
            }
            set
            {
                if (_AlumnusId != value)
                {
                    OnAlumnusIdChanging(value);
                    ReportPropertyChanging("AlumnusId");
                    _AlumnusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlumnusId");
                    OnAlumnusIdChanged();
                }
            }
        }
        private global::System.Int32 _AlumnusId;
        partial void OnAlumnusIdChanging(global::System.Int32 value);
        partial void OnAlumnusIdChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlumniAssociationModel", "AlumnusDonation", "Donation")]
        public EntityCollection<Donation> Donations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Donation>("AlumniAssociationModel.AlumnusDonation", "Donation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Donation>("AlumniAssociationModel.AlumnusDonation", "Donation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Nenhuma Documentação de Metadados disponível.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlumniAssociationModel", Name="Donation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Donation : EntityObject
    {
        #region Método de Fábrica
    
        /// <summary>
        /// Crie um novo objeto Donation.
        /// </summary>
        /// <param name="donationId">Valor inicial da propriedade DonationId.</param>
        /// <param name="dateAndAmount">Valor inicial da propriedade DateAndAmount.</param>
        /// <param name="alumnusAlumnusId">Valor inicial da propriedade AlumnusAlumnusId.</param>
        public static Donation CreateDonation(global::System.Int32 donationId, global::System.String dateAndAmount, global::System.Int32 alumnusAlumnusId)
        {
            Donation donation = new Donation();
            donation.DonationId = donationId;
            donation.DateAndAmount = dateAndAmount;
            donation.AlumnusAlumnusId = alumnusAlumnusId;
            return donation;
        }

        #endregion

        #region Propriedades Primitivas
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DonationId
        {
            get
            {
                return _DonationId;
            }
            set
            {
                if (_DonationId != value)
                {
                    OnDonationIdChanging(value);
                    ReportPropertyChanging("DonationId");
                    _DonationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DonationId");
                    OnDonationIdChanged();
                }
            }
        }
        private global::System.Int32 _DonationId;
        partial void OnDonationIdChanging(global::System.Int32 value);
        partial void OnDonationIdChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DateAndAmount
        {
            get
            {
                return _DateAndAmount;
            }
            set
            {
                OnDateAndAmountChanging(value);
                ReportPropertyChanging("DateAndAmount");
                _DateAndAmount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DateAndAmount");
                OnDateAndAmountChanged();
            }
        }
        private global::System.String _DateAndAmount;
        partial void OnDateAndAmountChanging(global::System.String value);
        partial void OnDateAndAmountChanged();
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlumnusAlumnusId
        {
            get
            {
                return _AlumnusAlumnusId;
            }
            set
            {
                OnAlumnusAlumnusIdChanging(value);
                ReportPropertyChanging("AlumnusAlumnusId");
                _AlumnusAlumnusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlumnusAlumnusId");
                OnAlumnusAlumnusIdChanged();
            }
        }
        private global::System.Int32 _AlumnusAlumnusId;
        partial void OnAlumnusAlumnusIdChanging(global::System.Int32 value);
        partial void OnAlumnusAlumnusIdChanged();

        #endregion

    
        #region Propriedades de Navegação
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlumniAssociationModel", "AlumnusDonation", "Alumnus")]
        public Alumnus Alumnus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alumnus>("AlumniAssociationModel.AlumnusDonation", "Alumnus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alumnus>("AlumniAssociationModel.AlumnusDonation", "Alumnus").Value = value;
            }
        }
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alumnus> AlumnusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alumnus>("AlumniAssociationModel.AlumnusDonation", "Alumnus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alumnus>("AlumniAssociationModel.AlumnusDonation", "Alumnus", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
